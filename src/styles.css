@font-face {
    font-family: Aero;
    font-weight: normal;
    src:
        url(assets/aero-webfont.woff) format('woff'),
        url(assets/aero-webfont.woff2) format('woff2');
}

html, body {
    height: 100%;
}
body {
    background: #0a1013;
}

@media only screen and (min-width: 1440px) {
    .ui.container{
        width: 1420px;
    }
}

.wrap {
    min-height: 100%;
    margin-bottom: -47px;
}
.wrap:after {
    content: "";
    display: block;
}
.footer, .wrap:after {
    margin-top: 0 !important;
    height: 47px; /* 14 - 19 - 14 */
}

.galaxy {
    background-image: url(assets/galaxy.jpg);
    height: 100%;
    width: 100%;
    opacity: 0.4;
    position: fixed;
}

a {
    padding: 0 2px;
    border-bottom: 2px solid rgba(255, 255, 255, 0.5);
    border-radius: 4px;
    background: rgba(255, 255, 255, 0.15);
}

/* Segments */
.ui.inverted.segment {
    background: inherit;
    color: rgba(145, 215, 220, 0.7);
}
.ui.inverted.segment .inverted.segment {
    color: rgba(145, 215, 220, 0.7);
}
.ui.inverted.basic.segment {
    background: inherit;
    border: 1px solid rgba(255, 255, 255, 0.1);
}
.ui.secondary.inverted.segment {
    background: linear-gradient(rgba(0, 0, 0, 0.5) 0, rgba(0, 0, 0, 0.3) 100%);
    color: rgba(145, 215, 220, 0.7);
}
.ui.tertiary.inverted.segment {
    background: linear-gradient(rgba(0, 35, 40, 0.7) 0,rgba(0, 0, 0, 1) 100%);
}
.ui.vertical.padded.segment {
    padding-left: 0;
    padding-right: 0;
}

.ui.inverted.segment .ui.items > .item .meta,
.ui.inverted.segment .ui.items > .item .extra {
    color: rgba(230, 255, 255, .8);
}

/* Table */
.ui.table td.no-break {
    white-space: nowrap;
}

.ui.inverted.table {
    color: rgba(145, 215, 220, 0.7);
}
.ui.inverted.table th {
    color: rgba(145, 215, 220, 0.9);
}

/* Forms */
.ui.inverted.form input:not([type]), .ui.inverted.form input[type=text], .ui.inverted.form input[type=email], .ui.inverted.form input[type=search], .ui.inverted.form input[type=password], .ui.inverted.form input[type=date], .ui.inverted.form input[type=datetime-local], .ui.inverted.form input[type=tel], .ui.inverted.form input[type=time], .ui.inverted.form input[type=file], .ui.inverted.form input[type=url], .ui.inverted.form input[type=number] {
    background: rgba(0, 0, 0, 0.5);
    border-color: rgba(255, 255, 255, 0.2);
    color: rgba(255, 255, 255, .8);
}

.ui.inverted.teal.basic.button:hover, .ui.inverted.teal.basic.buttons .button:hover, .ui.inverted.teal.buttons .basic.button:hover {
    color: rgba(145, 215, 220, 0.7) !important;
    box-shadow: 0 0 0 2px rgba(145, 215, 220, 0.7) inset !important;
}

/* Custom icons */
i.walkr.icon {
    background-size: cover;
    display: inline-block;
    width: 1em;
    position: relative;
    top: 1px;
}
i.walkr.coin.icon {
    background-image: url(assets/coin.png);
}
i.walkr.cube.icon {
    background-image: url(assets/cube.png);
}
i.walkr.food.icon {
    background-image: url(assets/food.png);
}
i.walkr.cube.icon:before,
i.walkr.food.icon:before {
    content: initial;
}

/* Headers */
.ui.header {
    font-family: Aero, Lato, Helvetica Neue, Arial, sans-serif;
}

.ui.inverted.header,
.ui.inverted.header .sub.header,
.ui.inverted.segment > .ui.header {
    color: rgba(255, 255, 255, .8);
    text-shadow: 0 0 0.65em rgba(145,215,220,0.6);
}
.ui.header .sub.header {
    font-family: Lato, Helvetica Neue, Arial, sans-serif;
    margin-bottom: 0.3em;
    text-shadow: none;
}
.ui.header .ui.label {
    font-family: Lato, 'Helvetica Neue', Arial, Helvetica, sans-serif;
    margin-left: 0;
}

.lead {
    font-size: 1.5em;
}
.ui.header small {
    font-size: 50%
}

.ui.label {
    text-shadow: 0 0 2px rgba(0, 0, 0, 0.5)
}

/* Progress */
.ui.teal.inverted.progress .bar {
    background: rgba(64, 227, 255, 0.8);
    box-shadow: 0 0 12px rgba(255, 255, 255, 0.7);
}

.spin {
    -webkit-animation:spin 240s linear infinite;
    -moz-animation:spin 240s linear infinite;
    animation:spin 240s linear infinite;
}

@-moz-keyframes spin {
    100% {
        transform: rotate(-360deg);
    }
}
@-webkit-keyframes spin {
    100% {
        transform: rotate(-360deg);
    }
}
@keyframes spin {
    100% {
        transform: rotate(-360deg);
    }
}

.point {
    fill: steelblue;
    stroke: black;
}